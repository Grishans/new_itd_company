import { makeAutoObservable } from "mobx"
import { sitetypeApi } from "../api"
import { ISiteType } from "../Types"

class SiteTypeStores {
	isLoad: boolean = false
	sitetype: ISiteType[] = [
		{
			title: "Промо-сайт",
			icon: "/img/Types/t1.png",
			example: ["/types/Промо/1.jpg", "/types/Промо/2.jpg"],
			desc: `<p className='type_is'>
			<b>Промо-сайт</b> — это, как правило, небольшой, но
			яркий веб-сайт, на который сложно не обратить внимание.
		</p>
		<h3>Особенности</h3>
		<ul>
			<li>- небольшое количество текстового контента;</li>
			<li>
				- яркость восприятия информации за счет качественного
				графического контента;
			</li>
			<li>
				- относительно небольшой срок существования, в
				основном, на время проведения акции или мероприятия.
			</li>
		</ul>
		<h3>Для кого</h3>
		<ul>
			<li>
				- для крупных компаний, желающих выделить какой-либо
				конкретный товар или услугу, среди множества других;
			</li>
			<li>
				- для компаний, которые только начинают свою
				деятельность;
			</li>
			<li>
				- компаниям, которые планируют масштабные мероприятия;
			</li>
			<li>
				- компаниям, запускающим сезонные акции и распродажи.
			</li>
		</ul>`,
		},
		{
			title: "Интернет-магазин",
			icon: "/img/Types/t2.png",
			example: ["/types/Интернет магазин/1.jpg"],
			desc: `<p className='type_is'>
			<b>Интернет-магазин</b> - это сайт, позволяющий совершать
			покупки или продажи посредством сети интернет.
		</p>
		<h3>Особенности</h3>
		<ul>
			<li>- наличие личного кабинета;</li>
			<li>
				- удобство совершения покупок в любом месте и в любое
				время;
			</li>
			<li>- онлайн-оплата;</li>
		</ul>
		<h3>Для кого</h3>
		<ul>
			<li>
				- для владельцев стандартизированных товаров и услуг;
			</li>
			<li>
				- для компаний, занимающихся традиционной розничной
				коммерцией.
			</li>
		</ul>`,
		},
		{
			title: "Сайт-визитка",
			icon: "/img/Types/t3.png",
			example: [
				"/types/Сайт визитка/1.jpg",
				"/types/Сайт визитка/2.jpg",
				"/types/Сайт визитка/3.jpg",
				"/types/Сайт визитка/4.jpg",
			],
			desc: `<p className='type_is'>
			<b>Сайт-визитка</b> - это электронная «визитная карточка»
			компании или отдельного человека с описанием деятельности.
			Большинство таких сайтов состоят из одной или трех
			страниц.
		</p>
		<h3>Особенности</h3>
		<ul>
			<li>- краткое содержание и лаконичная презентация;</li>
			<li>- индивидуальность;</li>
			<li>- не требует значительных финансовых вложений;</li>
		</ul>
		<h3>Для кого</h3>
		<ul>
			<li>- для индивидуальных предпринимателей;</li>
			<li>
				- для небольших компаний, которые только начинают свою
				деятельность;
			</li>
			<li>
				- для компаний с фиксированным перечнем услуг и
				продукции.
			</li>
		</ul>`,
		},
		{
			title: "Сайт-портфолио",
			icon: "/img/Types/t4.png",
			example: ["/types/Сайт портфолио/1.jpg", "/types/Сайт портфолио/2.jpg"],
			desc: `<p className='type_is'>
			<b>Сайт-портфолио</b> - это сайт, на котором компания либо
			отдельный человек, может максимально подробно рассказать о
			своих навыках, наработках или талантах.
		</p>
		<h3>Особенности</h3>
		<ul>
			<li>- наглядная демонстрация работ и навыков;</li>
			<li>
				- удобство в использовании (больше не нужно носить с
				собой флешку с Вашими работами, достаточно дать ссылку
				на сайт).
			</li>
		</ul>
		<h3>Для кого</h3>
		<ul>
			<li>- для людей творческих профессий;</li>
			<li>- для людей всех профессий и направленностей.</li>
		</ul>`,
		},
		{
			title: "Одностраничник",
			icon: "/img/Types/t5.png",
			example: [
				"/types/Одностраничник/1.jpg",
				"/types/Одностраничник/2.jpg",
				"/types/Одностраничник/3.jpg",
			],
			desc: `<p className='type_is'>
			<b>Одностаничник</b> - это сайт, который состоит из одной
			короткой или длинной страницы, созданный с целью продажи
			товара или услуги.
		</p>
		<h3>Особенности</h3>
		<ul>
			<li>- тестирование новой ниши;</li>
			<li>- возможность сбора контактных данных;</li>
			<li>- привлечение большего количества людей на сайт.</li>
		</ul>
		<h3>Для кого</h3>
		<ul>
			<li>- для компаний, продающих товары;</li>
			<li>- для компаний, предоставляющих услуги.</li>
		</ul>`,
		},
		{
			title: "Корпоративный сайт",
			icon: "/img/Types/t6.png",
			example: [
				"/types/Корпоративный сайт/1.jpg",
				"/types/Корпоративный сайт/2.jpg",
				"/types/Корпоративный сайт/3.jpg",
			],
			desc: `<p className='type_is'>
			<b>Корпоративный сайт</b> - это качественная и полноценная
			презентация компании в Интернете.
		</p>
		<h3>Особенности</h3>
		<ul>
			<li>- формирование и повышение имиджа компании;</li>
			<li>- расширение клиентской и партнерской базы;</li>
			<li>- предоставление полной информации о компании;</li>
			<li>- привлечение новых сотрудников;</li>
			<li>- хранение и обмен файлов.</li>
		</ul>
		<h3>Для кого</h3>
		<ul>
			<li>
				- для компаний, которые хотят привлечь новых клиентов;
			</li>
			<li>
				- компаниям, ведущим работу с сотрудниками удаленно;
			</li>
			<li>- компаниям, продающим свои товары или услуги.</li>
		</ul>`,
		},
		{
			title: "Лендинг",
			icon: "/img/Types/t7.png",
			example: ["/types/Лендинг/1.jpg", "/types/Лендинг/2.jpg"],
			desc: `<p className='type_is'>
			<b>Landing</b> - это страница сайта, направленная на одно
			целевое действие (покупка товара или услуги, скачивание
			файла или получение контакта заказчика).
		</p>
		<h3>Особенности</h3>
		<ul>
			<li>- повышение эффективности рекламы;</li>
			<li>- одно предложение - одно действие.</li>
		</ul>
		<h3>Для кого</h3>
		<ul>
			<li>- организаторам мероприятий;</li>
			<li>- компаниям по продаже товаров и услуг.</li>
		</ul>`,
		},
		{
			title: "Блог",
			icon: "/img/Types/t3.png",
			example: ["/types/Блог/1.jpg", "/types/Блог/2.jpg"],
			desc: `<p className='type_is'>
			<b>Блог</b> - это веб-сайт, содержащий постоянно
			обновляемую хронологическую ленту информации.
		</p>
		<h3>Особенности</h3>
		<ul>
			<li>- возможность публикации отзывов посетителями;</li>
			<li>- простота добавления новых записей;</li>
			<li>- большая аудитория.</li>
		</ul>
		<h3>Для кого</h3>
		<ul>
			<li>- пользователям по интересам;</li>
			<li>- авторам публикаций своих статей или работ;</li>
			<li>
				- компаниям, показывающим обзор своих товаров и услуг.
			</li>
		</ul>`,
		},
		{
			title: "Портал",
			icon: "/img/Types/t3.png",
			example: [
				"/types/Портал/1.jpg",
				"/types/Портал/2.jpg",
				"/types/Портал/3.jpg",
			],
			desc: `<p className='type_is'>
			<b>Портал</b> - это глобальный сайт, в рамках которого
			собраны более мелкие виртуальные проекты, работающие как
			единое целое.
		</p>
		<h3>Особенности</h3>
		<ul>
			<li>
				- удобная и понятная навигация в огромном потоке
				информации;
			</li>
			<li>
				- большие возможности для архивирования и работы с
				информацией в любых доступных форматах;
			</li>
			<li>
				- передача данных между различными приложениями,
				задействованными пользователем в ходе работы на портале.
			</li>
		</ul>
		<h3>Для кого</h3>
		<ul>
			<li>
				- компаниям для продвижения бренда или увеличения
				продаж;
			</li>
			<li>
				- для государственных органов (информация о внесенных
				изменениях в законы и т.п.);
			</li>
			<li>- для СМИ (политика, спорт, экономика).</li>
		</ul>`,
		},
	]
	constructor() {
		makeAutoObservable(this)
	}
	create = async (e: ISiteType): Promise<void> => {
		try {
			const { data } = await sitetypeApi.create(e)
			if (data.status === "success") {
				this.sitetype.push(data.data)
				alert("Данные сохранены!")
			}
		} catch (error) {
			console.error(`Ошибка: ${error}`)
		}
	}
	update = async (e: ISiteType): Promise<void> => {
		try {
			const { data } = await sitetypeApi.update(e)
			if (data.status === "success") {
				this.sitetype = this.sitetype.map((item) =>
					item._id === e._id ? (item = e) : item,
				)
				//await serviceStores.fetchService()
				alert("Данные обновлены!")
			}
		} catch (error) {
			console.error(`Ошибка: ${error}`)
		}
	}
	delete = async (e: string): Promise<void> => {
		try {
			const { data } = await sitetypeApi.delete(e)
			if (data.status === "success") {
				this.sitetype = this.sitetype.filter((item) => item._id !== e)
				alert("Данные удалены!")
			}
		} catch (error) {
			console.error(`Ошибка: ${error}`)
		}
	}
	fetchService = async (): Promise<void> => {
		try {
			const { data } = await sitetypeApi.show()
			this.sitetype = data.data
			this.isLoad = true
		} catch (error) {
			console.error(`Ошибка: ${error}`)
		}
	}
}

export default new SiteTypeStores()
